# Generated by Django 4.2 on 2025-06-16 07:42

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('enseignant', 'Enseignant'), ('etudiant', 'Étudiant')], default='enseignant', max_length=20)),
                ('matricule', models.CharField(max_length=11, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CreneauHoraire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(choices=[('08:00-10:00', '08:00 - 10:00'), ('10:15-12:15', '10:15 - 12:15'), ('13:30-15:30', '13:30 - 15:30'), ('15:45-17:45', '15:45 - 17:45')], max_length=20, unique=True)),
                ('heure_debut', models.TimeField()),
                ('heure_fin', models.TimeField()),
            ],
            options={
                'ordering': ['heure_debut'],
            },
        ),
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=11, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('responsable', models.ForeignKey(limit_choices_to={'user_type': 'enseignant'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='formations_responsable', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Salle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('capacite', models.PositiveIntegerField()),
                ('equipements', models.TextField(blank=True, help_text='Description des équipements disponibles')),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='TypeMateriel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Materiel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('numero_serie', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('type_materiel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materiels', to='core.typemateriel')),
            ],
            options={
                'ordering': ['type_materiel__nom', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='ReservationSalle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('sujet', models.CharField(blank=True, max_length=200, null=True)),
                ('commentaires', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creneau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.creneauhoraire')),
                ('enseignant', models.ForeignKey(limit_choices_to={'user_type': 'enseignant'}, on_delete=django.db.models.deletion.CASCADE, related_name='reservations_salles', to=settings.AUTH_USER_MODEL)),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations_salles', to='core.formation')),
                ('salle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='core.salle')),
            ],
            options={
                'ordering': ['-date', 'creneau__heure_debut'],
                'unique_together': {('salle', 'date', 'creneau')},
            },
        ),
        migrations.CreateModel(
            name='ReservationMateriel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('commentaires', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creneau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.creneauhoraire')),
                ('enseignant', models.ForeignKey(limit_choices_to={'user_type': 'enseignant'}, on_delete=django.db.models.deletion.CASCADE, related_name='reservations_materiels', to=settings.AUTH_USER_MODEL)),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations_materiels', to='core.formation')),
                ('materiel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='core.materiel')),
            ],
            options={
                'ordering': ['-date', 'creneau__heure_debut'],
                'unique_together': {('materiel', 'date', 'creneau')},
            },
        ),
        migrations.CreateModel(
            name='RecapitulatifHoraire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('sujet', models.CharField(blank=True, max_length=200, null=True)),
                ('commentaires', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creneau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.creneauhoraire')),
                ('enseignant', models.ForeignKey(limit_choices_to={'user_type': 'enseignant'}, on_delete=django.db.models.deletion.CASCADE, related_name='recapitulatifs', to=settings.AUTH_USER_MODEL)),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recapitulatifs', to='core.formation')),
                ('salle_prevue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.salle')),
            ],
            options={
                'ordering': ['formation', '-date', 'creneau__heure_debut'],
                'unique_together': {('formation', 'enseignant', 'date', 'creneau')},
            },
        ),
    ]
